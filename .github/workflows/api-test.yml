# Tên của quy trình CI/CD
name: Laravel CI/CD with Newman Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # Bước 1: Lấy code từ repository về
    - name: Checkout Code ⚙️
      uses: actions/checkout@v4

    # Bước 2: Tạo file .env từ template và secrets
    - name: Create Laravel .env file 🔧
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "🔧 Creating Laravel .env file from .env.ci template..."
        # Lệnh envsubst sẽ đọc file .env.ci, tìm các biến $VAR và thay bằng giá trị từ secrets
        envsubst < sprint5-with-bugs/API/.env.ci > sprint5-with-bugs/API/.env
        echo "✅ .env file created successfully."

    # Bước 3: Khởi động các container Docker
    - name: Start Docker Containers 🐳
      run: docker compose up -d

    # Bước 4: Chờ các dịch vụ sẵn sàng
    - name: Wait for Services ⏳
      run: sleep 60
      shell: bash

    # Bước 5: Cài đặt các thư viện và thiết lập ứng dụng
    - name: Setup Application 🔧
      run: |
        echo "📦 Installing Composer dependencies..."
        # Sử dụng service 'composer' đã định nghĩa trong docker-compose.yml
        docker compose run --rm composer
        
        echo "🔒 Fixing permissions..."
        # Gán quyền truy cập cho thư mục storage và cache
        docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
        
        echo "🗄️ Running database migrations and seeding..."
        # Chạy migrate & seed
        docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

    # Bước 6: Cài đặt Node.js và Newman
    - name: Install Node.js & Newman ⚙️
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: npm install -g newman newman-reporter-htmlextra

    # Bước 7: Chạy kiểm thử Newman
    - name: Run Newman Tests 🚀
      run: |
        echo "📁 Creating reports directory..."
        mkdir -p reports
        
        echo "🔍 Testing API status endpoint..."
        curl -f http://localhost:8091/status -H "Accept: application/json" || exit 1
        echo "✅ Status endpoint working"
        
        echo "🔍 Testing products endpoint..."
        curl -f http://localhost:8091/products -H "Accept: application/json" || exit 1
        echo "✅ Products endpoint working"
        
        echo "🚀 Running Newman test suites..."
        
        # Test suite 1: Login tests
        if [ -f "tests/api/login-tests.postman_collection.json" ] && [ -f "tests/api/user-accounts.csv" ]; then
          echo "📋 Running login tests with CSV data..."
          newman run tests/api/login-tests.postman_collection.json \
            --iteration-data tests/api/user-accounts.csv \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export reports/login-dynamic-tests.html
        else
          echo "⚠️ Login test files not found, skipping..."
        fi
        
        # Test suite 2: Get invoices tests  
        if [ -f "tests/api/get-invoices-tests.postman_collection.json" ] && [ -f "tests/api/get-invoices-accounts.csv" ]; then
          echo "📋 Running get invoices tests with CSV data..."
          newman run tests/api/get-invoices-tests.postman_collection.json \
            --iteration-data tests/api/get-invoices-accounts.csv \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export reports/get-invoices-dynamic-tests.html
        else
          echo "⚠️ Get invoices test files not found, skipping..."
        fi
        
        # Test suite 3: Create product tests
        if [ -f "tests/api/create-product-tests.postman_collection.json" ] && [ -f "tests/api/create-product-accounts.csv" ]; then
          echo "📋 Running create product tests with CSV data..."
          newman run tests/api/create-product-tests.postman_collection.json \
            --iteration-data tests/api/create-product-accounts.csv \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export reports/create-product-dynamic-tests.html
        else
          echo "⚠️ Create product test files not found, skipping..."
        fi
        
        # Chạy thêm full test collections (nếu có)
        echo "📋 Running additional full test collections..."
        for collection in tests/api/*-full-tests.postman_collection.json; do
          if [ -f "$collection" ]; then
            filename=$(basename "$collection" .postman_collection.json)
            echo "🔄 Running $filename..."
            newman run "$collection" \
              --reporters cli,htmlextra \
              --reporter-htmlextra-export "reports/$filename.html"
          fi
        done
        
        echo "✅ All Newman tests completed!"
        echo "📊 Generated reports:"
        ls -la reports/ || echo "No reports generated"
        
    # Bước 8: Upload báo cáo (luôn chạy)
    - name: Upload Test Reports 📊
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: newman-test-reports
        path: reports/
        retention-days: 30

    # Bước 9: Dọn dẹp (luôn chạy)
    - name: Cleanup 🧹
      if: always()
      run: docker compose down -v